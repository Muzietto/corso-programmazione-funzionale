ESERCIZI SULLA DEFINIZIONE DI FUNZIONI RICORSIVE
================================================


* Dati due interi m>=0 e n>= 0, la definizione ricorsiva del MCD fra m e n e':

MCD(m,n) =  n    se m=0

         =  MCD(n % m, m)   se m > 0 


Definire una funzione ricorsiva  mcd : int * int -> int
che calcola MCD(m,n) (si assume  m>=0 e n>= 0)

Usando la funzione mcd, definire una funzione (non ricorsiva)

   simplify : int * int -> int * int

che semplifica una frazione.

Piu' precisamente, dati due interi a >= 0 e  b>0, 
simplify (a,b) = (c,d) se e solo se c/d e' la frazione ottenuta semplificando a/b.

Esempi:

simplify (15,9) ;; 
val it : int * int = (5, 3)

simplify (7,5) ;; 
val it : int * int = (7, 5)


____________________________________________________________________________________________

* Definire una funzione ricorsiva

 copy : string *  int -> string

che, data la copia (str,n), dove str e' una stringa e n>=1,
costruisce la stringa contenente n copie di str.

Ad esempio:

copy ("Ciao", 4) ;;
val it : string = "CiaoCiaoCiaoCiao"

____________________________________________________________________________________________


*  Definire le seguenti funzioni ricorsive:

   o  sum1 : int -> int

      Dato n >=0, sum1(n) calcola la somma dei numeri compresi fra 0 e n.

   o  sum2 : int * int -> int

      Dati m e n tali che n >= m >= 0, sum2(m,n)  calcola la somma dei numeri compresi fra m e n
   
Esempi:

sum1 4 ;;          
val it : int = 10   // 10 = 0 + 1 + 2 + 3 + 4

sum2 (2,5) ;;
val it : int = 14   // 14 = 2 + 3 + 4 + 5



____________________________________________________________________________________________

7)  Definire una funzione

  fib : int -> int

che, dato un intero n >= 0, calcola il valore  F_n dell'n-esimo numero di Fibonacci.

Si ricordi che:

F_0 = 0
F_1 = 1
F _n = F_(n-2) + F_(n-1)  per n > 2



